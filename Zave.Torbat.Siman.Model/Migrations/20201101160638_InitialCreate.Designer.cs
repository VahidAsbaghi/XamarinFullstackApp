// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zave.Torbat.Siman.Model.Models1.Factory;

namespace Zave.Torbat.Siman.Model.Migrations
{
    [DbContext(typeof(DB_FactoryContext))]
    [Migration("20201101160638_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TBakhsh", b =>
                {
                    b.Property<int>("Row")
                        .HasColumnName("row");

                    b.Property<int?>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Bakhsh");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TBlockCars", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Deleted")
                        .HasColumnName("deleted");

                    b.Property<string>("Mobail")
                        .HasColumnName("mobail")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(50);

                    b.Property<string>("Reson")
                        .HasColumnName("reson")
                        .HasMaxLength(300);

                    b.HasKey("Row");

                    b.ToTable("T_BlockCars");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TCarType", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_CarType");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TCard", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Cansel")
                        .HasColumnName("cansel");

                    b.Property<string>("IdCard")
                        .HasColumnName("id_card")
                        .HasMaxLength(50);

                    b.Property<string>("NumCard")
                        .HasColumnName("num_card")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Card");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TCarsCement", b =>
                {
                    b.Property<int>("Row");

                    b.Property<string>("CarType")
                        .HasColumnName("car_type")
                        .HasMaxLength(50);

                    b.Property<int?>("City")
                        .HasColumnName("city");

                    b.Property<int?>("Code")
                        .HasColumnName("code");

                    b.Property<int?>("Country")
                        .HasColumnName("country");

                    b.Property<string>("Destination")
                        .HasColumnName("destination")
                        .HasMaxLength(100);

                    b.Property<string>("Driver")
                        .HasColumnName("driver")
                        .HasMaxLength(50);

                    b.Property<string>("Mobail")
                        .HasColumnName("mobail")
                        .HasMaxLength(50);

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(50);

                    b.Property<string>("Product")
                        .HasColumnName("product")
                        .HasMaxLength(50);

                    b.Property<int?>("Province")
                        .HasColumnName("province");

                    b.HasKey("Row");

                    b.ToTable("T_CarsCement");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TChopper", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AntNum")
                        .HasColumnName("ant_num");

                    b.Property<bool?>("Body")
                        .HasColumnName("body");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<bool?>("Delete")
                        .HasColumnName("delete");

                    b.Property<byte?>("Destination")
                        .HasColumnName("destination");

                    b.Property<string>("Loads")
                        .HasColumnName("loads")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime");

                    b.Property<string>("TruckCode")
                        .HasColumnName("truck_code")
                        .HasMaxLength(10);

                    b.Property<int?>("W")
                        .HasColumnName("w");

                    b.HasKey("Row");

                    b.ToTable("T_Chopper");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TCity", b =>
                {
                    b.Property<int>("Row");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("ProvinceCode")
                        .HasColumnName("province_code");

                    b.HasKey("Row");

                    b.ToTable("T_City");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TCountry", b =>
                {
                    b.Property<int>("Row");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Country");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TDestination", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Destination")
                        .HasColumnName("destination")
                        .HasMaxLength(100);

                    b.HasKey("Row");

                    b.ToTable("T_Destination");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TInputBar", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bakhsh")
                        .HasColumnName("bakhsh")
                        .HasMaxLength(50);

                    b.Property<string>("Barbari")
                        .HasColumnName("barbari")
                        .HasMaxLength(50);

                    b.Property<bool?>("Cansel")
                        .HasColumnName("cansel");

                    b.Property<int?>("Capacity")
                        .HasColumnName("capacity");

                    b.Property<string>("CarCode")
                        .HasColumnName("car_code")
                        .HasMaxLength(50);

                    b.Property<string>("CarType")
                        .HasColumnName("car_type")
                        .HasMaxLength(50);

                    b.Property<int?>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<int?>("CountryCode")
                        .HasColumnName("country_code");

                    b.Property<int?>("CrmCodeB")
                        .HasColumnName("crm_code_b");

                    b.Property<int?>("CrmCodeC")
                        .HasColumnName("crm_code_c");

                    b.Property<string>("CustomMobail")
                        .HasColumnName("custom_mobail")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnName("date_edit")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateHavale")
                        .HasColumnName("date_havale")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(300);

                    b.Property<string>("Destination")
                        .HasColumnName("destination")
                        .HasMaxLength(100);

                    b.Property<string>("DisEdit")
                        .HasColumnName("dis_edit")
                        .HasMaxLength(150);

                    b.Property<string>("Driver")
                        .HasColumnName("driver")
                        .HasMaxLength(50);

                    b.Property<string>("Haml")
                        .HasColumnName("haml")
                        .HasMaxLength(20);

                    b.Property<string>("Havale")
                        .HasColumnName("havale")
                        .HasMaxLength(50);

                    b.Property<bool?>("In")
                        .HasColumnName("in_");

                    b.Property<bool?>("Loading")
                        .HasColumnName("loading");

                    b.Property<string>("Mobail")
                        .HasColumnName("mobail")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(300);

                    b.Property<string>("NameBoss")
                        .HasColumnName("name_boss")
                        .HasMaxLength(300);

                    b.Property<int?>("Nobat")
                        .HasColumnName("nobat");

                    b.Property<string>("NumCertificates")
                        .HasColumnName("num_Certificates")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<bool?>("Out")
                        .HasColumnName("out_");

                    b.Property<bool?>("PS")
                        .HasColumnName("P_S");

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(50);

                    b.Property<string>("Product")
                        .HasColumnName("product")
                        .HasMaxLength(50);

                    b.Property<int?>("ProvinceCode")
                        .HasColumnName("province_code");

                    b.Property<long?>("RowSale")
                        .HasColumnName("row_sale");

                    b.Property<bool?>("Saderat")
                        .HasColumnName("saderat");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(50);

                    b.Property<string>("Takhlieh")
                        .HasColumnName("takhlieh")
                        .HasMaxLength(150);

                    b.Property<string>("Terminal")
                        .HasColumnName("terminal")
                        .HasMaxLength(50);

                    b.Property<string>("Time")
                        .HasColumnName("time")
                        .HasMaxLength(10);

                    b.Property<string>("TimeTakhlie")
                        .HasColumnName("time_takhlie")
                        .HasMaxLength(20);

                    b.Property<double?>("Ton")
                        .HasColumnName("ton");

                    b.Property<string>("Tozihat")
                        .HasColumnName("tozihat")
                        .HasMaxLength(300);

                    b.Property<string>("UserEdit")
                        .HasColumnName("user_edit")
                        .HasMaxLength(50);

                    b.Property<double?>("Zarfiat")
                        .HasColumnName("zarfiat");

                    b.HasKey("Row");

                    b.ToTable("T_InputBar");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TInputBarNew", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bakhsh")
                        .HasColumnName("bakhsh")
                        .HasMaxLength(50);

                    b.Property<string>("Barbari")
                        .HasColumnName("barbari")
                        .HasMaxLength(50);

                    b.Property<bool?>("Cansel")
                        .HasColumnName("cansel");

                    b.Property<int?>("Capacity")
                        .HasColumnName("capacity");

                    b.Property<string>("CarCode")
                        .HasColumnName("car_code")
                        .HasMaxLength(50);

                    b.Property<string>("CarType")
                        .HasColumnName("car_type")
                        .HasMaxLength(50);

                    b.Property<int?>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<int?>("CountryCode")
                        .HasColumnName("country_code");

                    b.Property<int?>("CrmCodeB")
                        .HasColumnName("crm_code_b");

                    b.Property<int?>("CrmCodeC")
                        .HasColumnName("crm_code_c");

                    b.Property<string>("CustomMobail")
                        .HasColumnName("custom_mobail")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnName("date_edit")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateHavale")
                        .HasColumnName("date_havale")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(300);

                    b.Property<string>("Destination")
                        .HasColumnName("destination")
                        .HasMaxLength(100);

                    b.Property<string>("DisEdit")
                        .HasColumnName("dis_edit")
                        .HasMaxLength(150);

                    b.Property<string>("Driver")
                        .HasColumnName("driver")
                        .HasMaxLength(50);

                    b.Property<string>("Haml")
                        .HasColumnName("haml")
                        .HasMaxLength(20);

                    b.Property<string>("Havale")
                        .HasColumnName("havale")
                        .HasMaxLength(50);

                    b.Property<bool?>("In")
                        .HasColumnName("in_");

                    b.Property<bool?>("Loading")
                        .HasColumnName("loading");

                    b.Property<string>("Mobail")
                        .HasColumnName("mobail")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(300);

                    b.Property<string>("NameBoss")
                        .HasColumnName("name_boss")
                        .HasMaxLength(300);

                    b.Property<int?>("Nobat")
                        .HasColumnName("nobat");

                    b.Property<string>("NumCertificates")
                        .HasColumnName("num_Certificates")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<bool?>("Out")
                        .HasColumnName("out_");

                    b.Property<bool?>("PS")
                        .HasColumnName("P_S");

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(50);

                    b.Property<string>("Product")
                        .HasColumnName("product")
                        .HasMaxLength(50);

                    b.Property<int?>("ProvinceCode")
                        .HasColumnName("province_code");

                    b.Property<long?>("RowSale")
                        .HasColumnName("row_sale");

                    b.Property<bool?>("Saderat")
                        .HasColumnName("saderat");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(50);

                    b.Property<string>("Takhlieh")
                        .HasColumnName("takhlieh")
                        .HasMaxLength(150);

                    b.Property<string>("Terminal")
                        .HasColumnName("terminal")
                        .HasMaxLength(50);

                    b.Property<string>("Time")
                        .HasColumnName("time")
                        .HasMaxLength(10);

                    b.Property<string>("TimeTakhlie")
                        .HasColumnName("time_takhlie")
                        .HasMaxLength(20);

                    b.Property<double?>("Ton")
                        .HasColumnName("ton");

                    b.Property<string>("Tozihat")
                        .HasColumnName("tozihat")
                        .HasMaxLength(300);

                    b.Property<string>("UserEdit")
                        .HasColumnName("user_edit")
                        .HasMaxLength(50);

                    b.Property<double?>("Zarfiat")
                        .HasColumnName("zarfiat");

                    b.HasKey("Row");

                    b.ToTable("T_InputBar_New");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TLevelAccess", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("row")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("A1")
                        .HasColumnName("a1");

                    b.Property<bool?>("A10")
                        .HasColumnName("a10");

                    b.Property<bool?>("A11")
                        .HasColumnName("a11");

                    b.Property<bool?>("A12")
                        .HasColumnName("a12");

                    b.Property<bool?>("A13")
                        .HasColumnName("a13");

                    b.Property<bool?>("A14")
                        .HasColumnName("a14");

                    b.Property<bool?>("A15")
                        .HasColumnName("a15");

                    b.Property<bool?>("A16")
                        .HasColumnName("a16");

                    b.Property<bool?>("A17")
                        .HasColumnName("a17");

                    b.Property<bool?>("A18")
                        .HasColumnName("a18");

                    b.Property<bool?>("A19")
                        .HasColumnName("a19");

                    b.Property<bool?>("A2")
                        .HasColumnName("a2");

                    b.Property<bool?>("A20")
                        .HasColumnName("a20");

                    b.Property<bool?>("A21")
                        .HasColumnName("a21");

                    b.Property<bool?>("A22")
                        .HasColumnName("a22");

                    b.Property<bool?>("A23")
                        .HasColumnName("a23");

                    b.Property<bool?>("A24")
                        .HasColumnName("a24");

                    b.Property<bool?>("A25")
                        .HasColumnName("a25");

                    b.Property<bool?>("A26")
                        .HasColumnName("a26");

                    b.Property<bool?>("A27")
                        .HasColumnName("a27");

                    b.Property<bool?>("A28")
                        .HasColumnName("a28");

                    b.Property<bool?>("A29")
                        .HasColumnName("a29");

                    b.Property<bool?>("A3")
                        .HasColumnName("a3");

                    b.Property<bool?>("A30")
                        .HasColumnName("a30");

                    b.Property<bool?>("A31")
                        .HasColumnName("a31");

                    b.Property<bool?>("A32")
                        .HasColumnName("a32");

                    b.Property<bool?>("A33")
                        .HasColumnName("a33");

                    b.Property<bool?>("A34")
                        .HasColumnName("a34");

                    b.Property<bool?>("A35")
                        .HasColumnName("a35");

                    b.Property<bool?>("A36")
                        .HasColumnName("a36");

                    b.Property<bool?>("A37")
                        .HasColumnName("a37");

                    b.Property<bool?>("A38")
                        .HasColumnName("a38");

                    b.Property<bool?>("A39")
                        .HasColumnName("a39");

                    b.Property<bool?>("A4")
                        .HasColumnName("a4");

                    b.Property<bool?>("A40")
                        .HasColumnName("a40");

                    b.Property<bool?>("A5")
                        .HasColumnName("a5");

                    b.Property<bool?>("A6")
                        .HasColumnName("a6");

                    b.Property<bool?>("A7")
                        .HasColumnName("a7");

                    b.Property<bool?>("A8")
                        .HasColumnName("a8");

                    b.Property<bool?>("A9")
                        .HasColumnName("a9");

                    b.Property<DateTime?>("Dateedit")
                        .HasColumnName("dateedit")
                        .HasColumnType("datetime");

                    b.Property<string>("Discr")
                        .HasColumnName("discr")
                        .HasMaxLength(100);

                    b.Property<string>("Page")
                        .HasColumnName("page")
                        .HasMaxLength(100);

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_LevelAccess");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TNewDrivers", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CertificateDate")
                        .HasColumnType("date");

                    b.Property<string>("CertificateNum")
                        .HasMaxLength(20);

                    b.Property<string>("DriverName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("EditeDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EditeMan")
                        .HasMaxLength(100);

                    b.Property<bool?>("Enable");

                    b.Property<DateTime?>("HooshmandDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertMan")
                        .HasMaxLength(100);

                    b.Property<int?>("Mistake");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20);

                    b.Property<bool?>("New");

                    b.Property<DateTime?>("SalamatDate")
                        .HasColumnType("date");

                    b.HasKey("Row");

                    b.ToTable("T_New_Drivers");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TNewTerminals", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AndroidEnable");

                    b.Property<double?>("Bigbag");

                    b.Property<double?>("Clinker");

                    b.Property<int?>("Code");

                    b.Property<bool?>("Delete");

                    b.Property<int?>("DeleteNobat")
                        .HasColumnName("delete_nobat");

                    b.Property<string>("EditeDate")
                        .HasMaxLength(100);

                    b.Property<string>("EditeMan")
                        .HasMaxLength(100);

                    b.Property<bool?>("Enable");

                    b.Property<double?>("Fale");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertMan")
                        .HasMaxLength(100);

                    b.Property<int?>("Mistake");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int?>("NoeBigbag")
                        .HasColumnName("NOE_Bigbag");

                    b.Property<int?>("NoeClinker")
                        .HasColumnName("NOE_Clinker");

                    b.Property<int?>("NoeFale")
                        .HasColumnName("NOE_Fale");

                    b.Property<int?>("NoePakati")
                        .HasColumnName("NOE_Pakati");

                    b.Property<double?>("Pakati");

                    b.Property<int?>("Score");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("Row");

                    b.ToTable("T_NewTerminals");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TPaletCount", b =>
                {
                    b.Property<byte>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Palet")
                        .HasColumnName("palet");

                    b.Property<int?>("Sandugh")
                        .HasColumnName("sandugh");

                    b.HasKey("Row");

                    b.ToTable("T_PaletCount");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TProvince", b =>
                {
                    b.Property<int>("Row");

                    b.Property<int?>("CountryCode")
                        .HasColumnName("country_code");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Province");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TSabtEtahvil", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bakhsh")
                        .HasColumnName("bakhsh")
                        .HasMaxLength(50);

                    b.Property<string>("Barbari")
                        .HasColumnName("barbari")
                        .HasMaxLength(50);

                    b.Property<string>("BaskoolNumber")
                        .HasColumnName("baskool_number")
                        .HasMaxLength(20);

                    b.Property<bool?>("Cansel")
                        .HasColumnName("cansel");

                    b.Property<string>("CarCode")
                        .HasColumnName("car_code")
                        .HasMaxLength(50);

                    b.Property<string>("CarType")
                        .HasColumnName("car_type")
                        .HasMaxLength(50);

                    b.Property<string>("Card")
                        .HasColumnName("card")
                        .HasMaxLength(50);

                    b.Property<string>("CementName")
                        .HasColumnName("cement_name")
                        .HasMaxLength(20);

                    b.Property<int?>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<double?>("CountPakat")
                        .HasColumnName("count_pakat");

                    b.Property<int?>("CountryCode")
                        .HasColumnName("country_code");

                    b.Property<int?>("CrmCodeB")
                        .HasColumnName("crm_code_b");

                    b.Property<int?>("CrmCodeC")
                        .HasColumnName("crm_code_c");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Date2")
                        .HasColumnName("date2")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnName("date_edit")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateHavale")
                        .HasColumnName("date_havale")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateWeight1")
                        .HasColumnName("date_weight1")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateWeight2")
                        .HasColumnName("date_weight2")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(300);

                    b.Property<string>("Destination")
                        .HasColumnName("destination")
                        .HasMaxLength(100);

                    b.Property<string>("DisEdit")
                        .HasColumnName("dis_edit")
                        .HasMaxLength(150);

                    b.Property<string>("Driver")
                        .HasColumnName("driver")
                        .HasMaxLength(50);

                    b.Property<string>("Error")
                        .HasColumnName("error")
                        .HasMaxLength(50);

                    b.Property<string>("Karbar")
                        .HasColumnName("karbar")
                        .HasMaxLength(50);

                    b.Property<string>("Karbar2")
                        .HasColumnName("karbar2")
                        .HasMaxLength(50);

                    b.Property<string>("Loading")
                        .HasColumnName("loading")
                        .HasMaxLength(50);

                    b.Property<string>("Mobail")
                        .HasColumnName("mobail")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(300);

                    b.Property<string>("NameBoss")
                        .HasColumnName("name_boss")
                        .HasMaxLength(300);

                    b.Property<int?>("Nobat")
                        .HasColumnName("nobat");

                    b.Property<int?>("NumBarname")
                        .HasColumnName("num_barname");

                    b.Property<string>("NumBarname2")
                        .HasColumnName("num_barname2")
                        .HasMaxLength(100);

                    b.Property<bool?>("Ok")
                        .HasColumnName("ok");

                    b.Property<bool?>("OkOut")
                        .HasColumnName("ok_out");

                    b.Property<bool?>("PS")
                        .HasColumnName("P_S");

                    b.Property<int?>("Palet")
                        .HasColumnName("palet");

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(50);

                    b.Property<string>("Product")
                        .HasColumnName("product")
                        .HasMaxLength(50);

                    b.Property<int?>("ProvinceCode")
                        .HasColumnName("province_code");

                    b.Property<string>("Rayvarz")
                        .HasColumnName("rayvarz")
                        .HasMaxLength(50);

                    b.Property<long?>("RowSale")
                        .HasColumnName("row_sale");

                    b.Property<long?>("RowTerminal")
                        .HasColumnName("row_terminal");

                    b.Property<string>("Saderat")
                        .HasColumnName("saderat")
                        .HasMaxLength(20);

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(50);

                    b.Property<string>("Takhlieh")
                        .HasColumnName("takhlieh")
                        .HasMaxLength(150);

                    b.Property<string>("Terminal")
                        .HasColumnName("terminal")
                        .HasMaxLength(50);

                    b.Property<string>("Time")
                        .HasColumnName("time")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("TimeLoading")
                        .HasColumnName("time_loading")
                        .HasColumnType("datetime");

                    b.Property<double?>("Ton")
                        .HasColumnName("ton");

                    b.Property<string>("UserEdit")
                        .HasColumnName("user_edit")
                        .HasMaxLength(50);

                    b.Property<string>("WeighingLocal1")
                        .HasColumnName("weighing_local1")
                        .HasMaxLength(50);

                    b.Property<string>("WeighingLocal2")
                        .HasColumnName("weighing_local2")
                        .HasMaxLength(50);

                    b.Property<int?>("WeighingNumber");

                    b.Property<double?>("Weight1")
                        .HasColumnName("weight1");

                    b.Property<double?>("Weight2")
                        .HasColumnName("weight2");

                    b.Property<double?>("Weight3")
                        .HasColumnName("weight3");

                    b.Property<double?>("Zarfiat")
                        .HasColumnName("zarfiat");

                    b.HasKey("Row");

                    b.ToTable("T_SabtETahvil");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TSentry", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarType")
                        .HasColumnName("car_type")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnName("date_edit")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateIn")
                        .HasColumnName("date_in")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOut")
                        .HasColumnName("date_out")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasColumnName("destination")
                        .HasMaxLength(100);

                    b.Property<string>("Driver")
                        .HasColumnName("driver")
                        .HasMaxLength(50);

                    b.Property<bool?>("In")
                        .HasColumnName("in_");

                    b.Property<string>("Karbar")
                        .HasColumnName("karbar")
                        .HasMaxLength(50);

                    b.Property<string>("Mobail")
                        .HasColumnName("mobail")
                        .HasMaxLength(50);

                    b.Property<bool?>("Out")
                        .HasColumnName("out_");

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(50);

                    b.Property<string>("Polomp")
                        .HasColumnName("polomp")
                        .HasMaxLength(50);

                    b.Property<string>("Product")
                        .HasColumnName("product")
                        .HasMaxLength(50);

                    b.Property<string>("RowIn")
                        .HasColumnName("row_in")
                        .HasMaxLength(50);

                    b.Property<bool?>("Saderat")
                        .HasColumnName("saderat");

                    b.Property<string>("Tozihat")
                        .HasColumnName("tozihat")
                        .HasMaxLength(100);

                    b.Property<string>("UserEdit")
                        .HasColumnName("user_edit")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Sentry");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TShiftCar", b =>
                {
                    b.Property<int>("Row");

                    b.Property<string>("Car")
                        .IsRequired()
                        .HasColumnName("car")
                        .HasMaxLength(50);

                    b.Property<int>("Count")
                        .HasColumnName("count");

                    b.HasKey("Row");

                    b.ToTable("T_ShiftCar");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TSms", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BigDakheli")
                        .HasColumnName("big_dakheli");

                    b.Property<bool?>("BigSaderat")
                        .HasColumnName("big_saderat");

                    b.Property<string>("Domain")
                        .HasColumnName("domain")
                        .HasMaxLength(50);

                    b.Property<bool?>("FaleDakheli")
                        .HasColumnName("fale_dakheli");

                    b.Property<bool?>("FaleSaderat")
                        .HasColumnName("fale_saderat");

                    b.Property<bool?>("KilinkerDakheli")
                        .HasColumnName("kilinker_dakheli");

                    b.Property<bool?>("KilinkerSaderat")
                        .HasColumnName("kilinker_saderat");

                    b.Property<bool?>("PakatDakheli")
                        .HasColumnName("pakat_dakheli");

                    b.Property<bool?>("PakatSaderat")
                        .HasColumnName("pakat_saderat");

                    b.Property<string>("Pass")
                        .HasColumnName("pass")
                        .HasMaxLength(50);

                    b.Property<string>("Paterncode")
                        .HasColumnName("paterncode")
                        .HasMaxLength(50);

                    b.Property<string>("Port")
                        .HasColumnName("port")
                        .HasMaxLength(50);

                    b.Property<string>("Send")
                        .HasColumnName("send")
                        .HasMaxLength(300);

                    b.Property<string>("Smsnum")
                        .HasColumnName("smsnum")
                        .HasMaxLength(50);

                    b.Property<string>("Smspass")
                        .HasColumnName("smspass")
                        .HasMaxLength(50);

                    b.Property<string>("Smsuser")
                        .HasColumnName("smsuser")
                        .HasMaxLength(50);

                    b.Property<string>("Terminal")
                        .HasColumnName("terminal")
                        .HasMaxLength(50);

                    b.Property<string>("Txt1")
                        .HasColumnName("txt1")
                        .HasMaxLength(300);

                    b.Property<string>("Txt2")
                        .HasColumnName("txt2")
                        .HasMaxLength(300);

                    b.Property<string>("Txt3")
                        .HasColumnName("txt3")
                        .HasMaxLength(300);

                    b.Property<string>("Txt4")
                        .HasColumnName("txt4")
                        .HasMaxLength(300);

                    b.Property<string>("Txt5")
                        .HasColumnName("txt5")
                        .HasMaxLength(300);

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Sms");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TTag", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Cansel")
                        .HasColumnName("cansel");

                    b.Property<string>("IdTag")
                        .HasColumnName("id_tag")
                        .HasMaxLength(50);

                    b.Property<string>("NumTag")
                        .HasColumnName("num_tag")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Tag");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TTempStart", b =>
                {
                    b.Property<int>("Row")
                        .HasColumnName("row");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<int?>("NumOfStartBigbag")
                        .HasColumnName("num_of_start_bigbag");

                    b.Property<int?>("NumOfStartClinker")
                        .HasColumnName("num_of_start_clinker");

                    b.Property<int?>("NumOfStartFalleh")
                        .HasColumnName("num_of_start_falleh");

                    b.Property<int?>("NumOfStartPakati")
                        .HasColumnName("num_of_start_pakati");

                    b.Property<string>("Terminal")
                        .HasColumnName("terminal")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_TempStart");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TTerminals", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Terminals");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TTruck", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool?>("AndroidEnable");

                    b.Property<string>("Card")
                        .HasMaxLength(50);

                    b.Property<bool?>("ChangeTerminal");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<bool?>("Delete");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("EditeDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EditeMan")
                        .HasMaxLength(100);

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool?>("Enable");

                    b.Property<string>("Id");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertMan")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InsureDate")
                        .HasColumnType("date");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20);

                    b.Property<bool?>("New");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<bool?>("P");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Pelak")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("PhoneVerificationToken");

                    b.Property<long?>("RowDriver");

                    b.Property<string>("SecurityStamp");

                    b.Property<DateTime?>("TechDate")
                        .HasColumnType("date");

                    b.Property<string>("Terminal")
                        .HasMaxLength(20);

                    b.Property<string>("Truck")
                        .HasMaxLength(50);

                    b.Property<int?>("TruckMistake");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Row");

                    b.ToTable("T_Truck");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TTruckTurn", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Android");

                    b.Property<bool?>("Call1");

                    b.Property<bool?>("Call2");

                    b.Property<bool?>("Call3");

                    b.Property<DateTime?>("DateCall1")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateCall2")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateCall3")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedCall1")
                        .HasMaxLength(100);

                    b.Property<string>("DeletedCall2")
                        .HasMaxLength(100);

                    b.Property<string>("DeletedCall3")
                        .HasMaxLength(100);

                    b.Property<string>("EditeMan")
                        .HasMaxLength(100);

                    b.Property<bool?>("Enable");

                    b.Property<DateTime?>("InsertDateNobat")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertMan")
                        .HasMaxLength(100);

                    b.Property<bool?>("P");

                    b.Property<string>("Pelak")
                        .HasMaxLength(50);

                    b.Property<string>("Product")
                        .HasMaxLength(50);

                    b.Property<long?>("RowTruck");

                    b.Property<string>("Terminal")
                        .HasMaxLength(100);

                    b.Property<int?>("Turn");

                    b.Property<DateTime?>("TurnDate")
                        .HasColumnType("datetime");

                    b.HasKey("Row");

                    b.ToTable("T_TruckTurn");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TTruckType", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Ton");

                    b.Property<string>("Truck")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_TruckType");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TUsers", b =>
                {
                    b.Property<int>("Row");

                    b.Property<bool?>("A1")
                        .HasColumnName("a1");

                    b.Property<bool?>("A10")
                        .HasColumnName("a10");

                    b.Property<bool?>("A11")
                        .HasColumnName("a11");

                    b.Property<bool?>("A12")
                        .HasColumnName("a12");

                    b.Property<bool?>("A13")
                        .HasColumnName("a13");

                    b.Property<bool?>("A14")
                        .HasColumnName("a14");

                    b.Property<bool?>("A15")
                        .HasColumnName("a15");

                    b.Property<bool?>("A16")
                        .HasColumnName("a16");

                    b.Property<bool?>("A17")
                        .HasColumnName("a17");

                    b.Property<bool?>("A18")
                        .HasColumnName("a18");

                    b.Property<bool?>("A19")
                        .HasColumnName("a19");

                    b.Property<bool?>("A2")
                        .HasColumnName("a2");

                    b.Property<bool?>("A20")
                        .HasColumnName("a20");

                    b.Property<bool?>("A21")
                        .HasColumnName("a21");

                    b.Property<bool?>("A22")
                        .HasColumnName("a22");

                    b.Property<bool?>("A23")
                        .HasColumnName("a23");

                    b.Property<bool?>("A24")
                        .HasColumnName("a24");

                    b.Property<bool?>("A25")
                        .HasColumnName("a25");

                    b.Property<bool?>("A26")
                        .HasColumnName("a26");

                    b.Property<bool?>("A27")
                        .HasColumnName("a27");

                    b.Property<bool?>("A28")
                        .HasColumnName("a28");

                    b.Property<bool?>("A29")
                        .HasColumnName("a29");

                    b.Property<bool?>("A3")
                        .HasColumnName("a3");

                    b.Property<bool?>("A30")
                        .HasColumnName("a30");

                    b.Property<bool?>("A31")
                        .HasColumnName("a31");

                    b.Property<bool?>("A32")
                        .HasColumnName("a32");

                    b.Property<bool?>("A33")
                        .HasColumnName("a33");

                    b.Property<bool?>("A34")
                        .HasColumnName("a34");

                    b.Property<bool?>("A35")
                        .HasColumnName("a35");

                    b.Property<bool?>("A36")
                        .HasColumnName("a36");

                    b.Property<bool?>("A37")
                        .HasColumnName("a37");

                    b.Property<bool?>("A38")
                        .HasColumnName("a38");

                    b.Property<bool?>("A39")
                        .HasColumnName("a39");

                    b.Property<bool?>("A4")
                        .HasColumnName("a4");

                    b.Property<bool?>("A40")
                        .HasColumnName("a40");

                    b.Property<bool?>("A41")
                        .HasColumnName("a41");

                    b.Property<bool?>("A42")
                        .HasColumnName("a42");

                    b.Property<bool?>("A43")
                        .HasColumnName("a43");

                    b.Property<bool?>("A44")
                        .HasColumnName("a44");

                    b.Property<bool?>("A45")
                        .HasColumnName("a45");

                    b.Property<bool?>("A46")
                        .HasColumnName("a46");

                    b.Property<bool?>("A47")
                        .HasColumnName("a47");

                    b.Property<bool?>("A48")
                        .HasColumnName("a48");

                    b.Property<bool?>("A49")
                        .HasColumnName("a49");

                    b.Property<bool?>("A5")
                        .HasColumnName("a5");

                    b.Property<bool?>("A50")
                        .HasColumnName("a50");

                    b.Property<bool?>("A51")
                        .HasColumnName("a51");

                    b.Property<bool?>("A52")
                        .HasColumnName("a52");

                    b.Property<bool?>("A53")
                        .HasColumnName("a53");

                    b.Property<bool?>("A54")
                        .HasColumnName("a54");

                    b.Property<bool?>("A55")
                        .HasColumnName("a55");

                    b.Property<bool?>("A56")
                        .HasColumnName("a56");

                    b.Property<bool?>("A57")
                        .HasColumnName("a57");

                    b.Property<bool?>("A58")
                        .HasColumnName("a58");

                    b.Property<bool?>("A59")
                        .HasColumnName("a59");

                    b.Property<bool?>("A6")
                        .HasColumnName("a6");

                    b.Property<bool?>("A60")
                        .HasColumnName("a60");

                    b.Property<bool?>("A61")
                        .HasColumnName("a61");

                    b.Property<bool?>("A62")
                        .HasColumnName("a62");

                    b.Property<bool?>("A63")
                        .HasColumnName("a63");

                    b.Property<bool?>("A64")
                        .HasColumnName("a64");

                    b.Property<bool?>("A65")
                        .HasColumnName("a65");

                    b.Property<bool?>("A66")
                        .HasColumnName("a66");

                    b.Property<bool?>("A67")
                        .HasColumnName("a67");

                    b.Property<bool?>("A68")
                        .HasColumnName("a68");

                    b.Property<bool?>("A69")
                        .HasColumnName("a69");

                    b.Property<bool?>("A7")
                        .HasColumnName("a7");

                    b.Property<bool?>("A70")
                        .HasColumnName("a70");

                    b.Property<bool?>("A71")
                        .HasColumnName("a71");

                    b.Property<bool?>("A72")
                        .HasColumnName("a72");

                    b.Property<bool?>("A73")
                        .HasColumnName("a73");

                    b.Property<bool?>("A74")
                        .HasColumnName("a74");

                    b.Property<bool?>("A75")
                        .HasColumnName("a75");

                    b.Property<bool?>("A76")
                        .HasColumnName("a76");

                    b.Property<bool?>("A77")
                        .HasColumnName("a77");

                    b.Property<bool?>("A78")
                        .HasColumnName("a78");

                    b.Property<bool?>("A79")
                        .HasColumnName("a79");

                    b.Property<bool?>("A8")
                        .HasColumnName("a8");

                    b.Property<bool?>("A80")
                        .HasColumnName("a80");

                    b.Property<bool?>("A81")
                        .HasColumnName("a81");

                    b.Property<bool?>("A82")
                        .HasColumnName("a82");

                    b.Property<bool?>("A83")
                        .HasColumnName("a83");

                    b.Property<bool?>("A84")
                        .HasColumnName("a84");

                    b.Property<bool?>("A85")
                        .HasColumnName("a85");

                    b.Property<bool?>("A9")
                        .HasColumnName("a9");

                    b.Property<int>("Control")
                        .HasColumnName("control");

                    b.Property<bool?>("Free")
                        .HasColumnName("free");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnName("pass")
                        .HasMaxLength(50);

                    b.Property<string>("Post")
                        .HasColumnName("post")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_Users");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TVersion", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("row")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnName("control")
                        .HasMaxLength(50);

                    b.Property<string>("Version")
                        .HasColumnName("version")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_version");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWBlock", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Block")
                        .HasColumnName("block")
                        .HasMaxLength(30);

                    b.Property<int?>("CarCode")
                        .HasColumnName("car_code");

                    b.HasKey("Row");

                    b.ToTable("T_W_Block");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWCarType", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Closed")
                        .HasColumnName("closed");

                    b.Property<bool?>("Deleted")
                        .HasColumnName("deleted");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_W_CarType");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWContractor", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Closed")
                        .HasColumnName("closed");

                    b.Property<bool?>("Deleted")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("datetime");

                    b.HasKey("Row");

                    b.ToTable("T_W_Contractor");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWDComp", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Closed")
                        .HasColumnName("closed");

                    b.Property<bool?>("Deleted")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("datetime");

                    b.HasKey("Row");

                    b.ToTable("T_W_D_Comp");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWDrivre", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarCode")
                        .HasColumnName("car_code");

                    b.Property<string>("CarType")
                        .HasMaxLength(50);

                    b.Property<bool?>("Closed")
                        .HasColumnName("closed");

                    b.Property<string>("Contractor")
                        .HasMaxLength(50);

                    b.Property<string>("DComp")
                        .HasColumnName("D_Comp")
                        .HasMaxLength(50);

                    b.Property<bool?>("Deleted")
                        .HasColumnName("deleted");

                    b.Property<string>("Fname")
                        .HasColumnName("fname")
                        .HasMaxLength(20);

                    b.Property<string>("Lname")
                        .HasColumnName("lname")
                        .HasMaxLength(20);

                    b.Property<string>("Loads")
                        .HasMaxLength(50);

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(50);

                    b.Property<string>("SComp")
                        .HasColumnName("S_Comp")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_W_Drivre");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWGroup", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("row")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Cancel")
                        .HasColumnName("cancel");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("GroupName")
                        .HasColumnName("group_name")
                        .HasMaxLength(50);

                    b.Property<string>("UserEdit")
                        .HasColumnName("user_edit")
                        .HasMaxLength(50);

                    b.HasKey("Row");

                    b.ToTable("T_W_group");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWLoads", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Closed")
                        .HasColumnName("closed");

                    b.Property<bool?>("Deleted")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Groupp");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("datetime");

                    b.HasKey("Row");

                    b.ToTable("T_W_Loads");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWSComp", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Closed")
                        .HasColumnName("closed");

                    b.Property<bool?>("Deleted")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("datetime");

                    b.HasKey("Row");

                    b.ToTable("T_W_S_Comp");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWTempWeigh", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Baskool")
                        .HasColumnName("baskool")
                        .HasMaxLength(10);

                    b.Property<string>("Block")
                        .HasColumnName("block")
                        .HasMaxLength(10);

                    b.Property<short?>("CarCode")
                        .HasColumnName("car_code");

                    b.Property<string>("CarType")
                        .HasMaxLength(50);

                    b.Property<string>("Contractor")
                        .HasMaxLength(50);

                    b.Property<string>("DComp")
                        .HasColumnName("D_Comp")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<string>("Fname")
                        .HasColumnName("fname")
                        .HasMaxLength(50);

                    b.Property<string>("Karbar")
                        .HasColumnName("karbar")
                        .HasMaxLength(30);

                    b.Property<string>("Lname")
                        .HasColumnName("lname")
                        .HasMaxLength(50);

                    b.Property<string>("Loads")
                        .HasMaxLength(50);

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(30);

                    b.Property<string>("SComp")
                        .HasColumnName("S_Comp")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime");

                    b.Property<int?>("W1")
                        .HasColumnName("w1");

                    b.HasKey("Row");

                    b.ToTable("T_W_TempWeigh");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWWeighings", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Baskool")
                        .HasColumnName("baskool")
                        .HasMaxLength(10);

                    b.Property<string>("Block")
                        .HasColumnName("block")
                        .HasMaxLength(10);

                    b.Property<bool?>("Body")
                        .HasColumnName("body");

                    b.Property<bool?>("Cansel")
                        .HasColumnName("cansel");

                    b.Property<short?>("CarCode")
                        .HasColumnName("car_code");

                    b.Property<string>("CarType")
                        .HasMaxLength(50);

                    b.Property<bool?>("Chopper")
                        .HasColumnName("chopper");

                    b.Property<string>("Contractor")
                        .HasMaxLength(50);

                    b.Property<string>("DComp")
                        .HasColumnName("D_Comp")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnName("date_edit")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(150);

                    b.Property<string>("DisEdit")
                        .HasColumnName("dis_edit")
                        .HasMaxLength(150);

                    b.Property<string>("Fname")
                        .HasColumnName("fname")
                        .HasMaxLength(50);

                    b.Property<string>("Karbar")
                        .HasColumnName("karbar")
                        .HasMaxLength(30);

                    b.Property<string>("Lname")
                        .HasColumnName("lname")
                        .HasMaxLength(50);

                    b.Property<string>("Loads")
                        .HasMaxLength(50);

                    b.Property<string>("Pelak")
                        .HasColumnName("pelak")
                        .HasMaxLength(30);

                    b.Property<string>("SComp")
                        .HasColumnName("S_Comp")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Time1")
                        .HasColumnName("time1")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Time2")
                        .HasColumnName("time2")
                        .HasColumnType("datetime");

                    b.Property<string>("UserEdit")
                        .HasColumnName("user_edit")
                        .HasMaxLength(50);

                    b.Property<int?>("W1")
                        .HasColumnName("w1");

                    b.Property<int?>("W2")
                        .HasColumnName("w2");

                    b.Property<int?>("W3")
                        .HasColumnName("w3");

                    b.Property<int?>("WeighingNumber");

                    b.HasKey("Row");

                    b.ToTable("T_W_Weighings");
                });

            modelBuilder.Entity("Zave.Torbat.Siman.Model.Models1.Factory.TWeighingNumbers", b =>
                {
                    b.Property<long>("Row")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasMaxLength(20);

                    b.Property<int?>("WeighingNumber");

                    b.Property<int?>("WeighingYear");

                    b.HasKey("Row");

                    b.ToTable("T_WeighingNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
